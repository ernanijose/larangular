{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAGgC;;;;;;;;;;;;ICMtE,yEAAwD;;;IAAtB,sEAAU;;ADEzC,MAAM,YAAY;IAIvB,YACS,MAAiB,EACjB,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAW;QACjB,gBAAW,GAAX,WAAW,CAAa;QALjC,UAAK,GAAG,QAAQ,CAAC;IAKkB,CAAC;IAEpC,EAAE;IACF,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EACpD;YACE,KAAK,EAAE,OAAO;SACjB,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC/B,CAAC,MAAM,EAAE,EAAE;YACT,IAAG,MAAM,EAAC;gBACR,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aACtD;QACH,CAAC,CACF,CAAC;IACJ,CAAC;;wEAzBU,YAAY;4FAAZ,YAAY;QCXzB,iFACI;QAAA,uEAAM;QAAA,oFAAyB;QAAA,4DAAO;QAC1C,4DAAc;QAEd,yEAA2B;QAI3B,yEACI;QAAA,kHAA6C;QACjD,4DAAM;QAGN,4EACI;QADiD,0IAAS,gBAAY,IAAC;QACvE,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC5B,4DAAS;;QANK,0DAAuB;QAAvB,8EAAuB;;6FDExB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACyB;AACW;AACrB;AACH;AACM;AACJ;AACE;AACJ;AACM;AACJ;AACI;AACF;AACF;AAER;AACS;AACF;AACoB;AAC7B;;AAqCtC,MAAM,SAAS;;wFAAT,SAAS,cAFR,4DAAY;4IAEb,SAAS,mBART;QACT,0DAAW;KACZ,YAtBQ;YACP,uEAAa;YACb,4FAAuB;YACvB,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,sEAAgB;YAEhB,wEAAe;YACf,sEAAc;YACd,wEAAe;YACf,oEAAa;YACb,2EAAgB;YAChB,oEAAa;YACb,2EAAgB;YAChB,yEAAe;YACf,uEAAc;YACd,uEAAc;SAEf;mIASU,SAAS,mBAhClB,4DAAY;QACZ,mEAAa;QACb,uFAAmB,aAGnB,uEAAa;QACb,4FAAuB;QACvB,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,sEAAgB;QAEhB,wEAAe;QACf,sEAAc;QACd,wEAAe;QACf,oEAAa;QACb,2EAAgB;QAChB,oEAAa;QACb,2EAAgB;QAChB,yEAAe;QACf,uEAAc;QACd,uEAAc;6FAWL,SAAS;cAlCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,mEAAa;oBACb,uFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,sEAAgB;oBAEhB,wEAAe;oBACf,sEAAc;oBACd,wEAAe;oBACf,oEAAa;oBACb,2EAAgB;oBAChB,oEAAa;oBACb,2EAAgB;oBAChB,yEAAe;oBACf,uEAAc;oBACd,uEAAc;iBAEf;gBACD,SAAS,EAAE;oBACT,0DAAW;iBACZ;gBACD,eAAe,EAAE;oBACf,uFAAmB;iBACpB;gBACD,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACxDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEnB;;;;;;;;;;;ICkC/B,oEAA2B;IAAA,yEAAQ;IAAA,mEAAQ;IAAA,4DAAS;IAAC,uDACjD;IAAA,+EAA0B;IAAA,+DAAI;IAAA,4DAAW;IAC7C,4DAAI;;;IAFiD,0DACjD;IADiD,8FACjD;;AD5BG,MAAM,mBAAmB;IAO9B,YACS,SAA4C;QAA5C,cAAS,GAAT,SAAS,CAAmC;QAPrD,gBAAW,GAAW,EAAE,CAAC;QACzB,UAAK,GAAG;YACN,IAAI,EAAE,IAAI,0CAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YACtC,OAAO,EAAE,IAAI;SACd;IAGwD,CAAC;IAE1D,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;sFAxBU,mBAAmB;mGAAnB,mBAAmB;;QCThC,yEACI;QAAA,yEACI;QAAA,oFACI;QAAA,2EACA;QADuC,gMAA6B;QAApE,4DACA;QAAA,2EAAU;QAAA,iFAAsB;QAAA,4DAAW;QAC/C,4DAAiB;QAEjB,oFACI;QAAA,2EACA;QAD0C,iMAA8B;QAAxE,4DACA;QAAA,2EAAU;QAAA,mFAAwB;QAAA,4DAAW;QACjD,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,4EACJ;QADsD,mMAA+B;QAAjF,4DACJ;QAAA,4DAAiB;QAEjB,qFACI;QAAA,4EACJ;QADyD,sMAAkC;QAAvF,4DACJ;QAAA,4DAAiB;QACrB,4DAAM;QAEN,0EACI;QAAA,qFACI;QAAA,+EAAuG;QAA7C,wMAAiC;QAAC,4DAAW;QAC3G,4DAAiB;QACrB,4DAAM;QACV,4DAAM;QAEN,iFACA;QAD0C,mJAAU,wBAAoB,IAAC;QAAzE,4DACA;QAAA,8EACI;QADuC,+RAAS,WAAiB,IAAC;QAClE,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QAChC,iFACJ;QAAA,4DAAS;QAET,8GAA2B;QAK3B,iEACA;QAAA,iEACA;QAAA,iEAEA;QAAA,2EACI;QAAA,8EAA6D;QAAnB,kJAAS,YAAQ,IAAC;QAAC,8DAAE;QAAA,4DAAS;QACxE,8EAA4D;QAArB,kJAAS,cAAU,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QACjF,4DAAM;;QA7C6C,0DAA6B;QAA7B,wFAA6B;QAK1B,0DAA8B;QAA9B,yFAA8B;QAOtB,0DAA+B;QAA/B,0FAA+B;QAI5B,0DAAkC;QAAlC,6FAAkC;QAM7B,0DAAiC;QAAjC,4FAAiC;QAWpG,0DAAuB;QAAvB,uFAAuB;;6FD3Bb,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACsB;AACnC;;;AAKvB,MAAM,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,UAAK,GAAW,EAAE,CAAC;QAGjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9B,CAAC,KAAY,EAAE,EAAE;YACf,KAAI,IAAI,CAAC,IAAI,KAAK,EAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CACvF,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,IAAU,EAAE,IAAU;QAC3B,MAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EACjC;YACE,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ;SACxC,CAAC,CAAC,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;YAC1B,IAAG,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,QAAQ,EAAC;gBACtC,qBAAqB;gBACrB,IAAI,CAAC,GAAO,KAAK,CAAC,IAAI,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CACvF,CAAC;aACH;YACD,IAAG,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,cAAc,EAAC;gBAC5C,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;gBAC9B,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACpB;QACH,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,IAAI,CAAC,EAAU;QACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,SAAS,CAC1C,CAAC,KAAU,EAAE,EAAE;YACb,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;YAC3C,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACxB,CAAC,CACA,CAAC;IACJ,CAAC;IAED,MAAM,CAAC,EAAU;QACf,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC,SAAS,CACtC,CAAC,KAAK,EAAE,EAAE;YACR,qBAAqB;YACrB,IAAI,CAAC,GAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;YACjD,IAAG,CAAC,IAAI,CAAC,EAAC;gBACR,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;aACxB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;;sEA/DU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,IAAI;IACb,YACW,IAAY,EACZ,MAAc,EACd,SAAiB,EACjB,KAAa,EACb,QAAgB,EAChB,OAAgB,EAChB,EAAW,EACX,KAAc;QAPd,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,YAAO,GAAP,OAAO,CAAS;QAChB,OAAE,GAAF,EAAE,CAAS;QACX,UAAK,GAAL,KAAK,CAAS;IACvB,CAAC;CACN;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;;ICenD,8EAC8E;IAAA,mEAAQ;IAAA,4DAAW;;;IADrD,uFAAuB;;ADNlE,MAAM,aAAa;IAIxB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;;0EAfU,aAAa;6FAAb,aAAa;QCT1B,8EACI;QAAA,kFACE;QAAA,oEAA2B;QAC3B,iFAAgB;QAAA,uDAAiB;QAAA,4DAAiB;QAClD,oFAAmB;QAAA,uDAAqB;QAAA,4DAAoB;QAC9D,4DAAkB;QAClB,oEACA;QAAA,mFACE;QAAA,oEACE;QAAA,wDACF;QAAA,4DAAI;QACN,4DAAmB;QACnB,oFACE;QAAA,6EAA2D;QAAjB,4IAAS,UAAM,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACxE,6EAA4D;QAAnB,4IAAS,YAAQ,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC3E,qHAC8E;QAChF,4DAAmB;QACrB,4DAAW;;QAfS,0DAAiB;QAAjB,gFAAiB;QACd,0DAAqB;QAArB,mFAAqB;QAEtB,0DAAiC;QAAjC,2KAAiC;QAGjD,0DACF;QADE,6FACF;QAKuB,0DAAoB;QAApB,oFAAoB;;6FDNpC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAGE,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meuapp';\n  public posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    public postService: PostService){}\n\n  //\n  ngOnInit(){\n    this.posts = this.postService.posts;\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent, \n      {\n        width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if(result){\n          this.postService.salvar(result.post, result.arquivo);\n        }\n      }\n    );\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n    <span>Projeto Laravel + Angular</span>\r\n</mat-toolbar>\r\n\r\n<mat-divider></mat-divider>\r\n\r\n<!--<app-post-dialog></app-post-dialog>-->\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\r\n    <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\r\n</div>\r\n\r\n\r\n<button mat-fab color=\"primary\" class=\"float-button\" (click)=\"openDialog()\">\r\n    <mat-icon>add</mat-icon>\r\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    PostService\n  ],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n  nomearquivo: string = '';\n  dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  }\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouarquivo(event){\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar(){\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar(){\n    this.dialogref.close(null);\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui o seu nome</mat-hint>\n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu E-mail\"  [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui o seu e-mail</mat-hint>\n        </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da Mensagem\"  [(ngModel)]=\"dados.post.titulo\">            \n        </mat-form-field>\n\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da Mensagem\"  [(ngModel)]=\"dados.post.subtitulo\">            \n        </mat-form-field>\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex>\n            <textarea matInput placeholder=\"Deixe aqui sua mensagem\"  [(ngModel)]=\"dados.post.mensagem\"></textarea>\n        </mat-form-field>\n    </div>\n</div>\n\n<input type=\"file\" style=\"display: none;\" (change)=\"mudouarquivo($event)\" #fileinput />\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma Foto\n</button>\n\n<p *ngIf=\"nomearquivo!=''\"><strong>Arquivo:</strong> {{ nomearquivo }}\n    <mat-icon color=\"primary\">done</mat-icon>\n</p>\n\n\n<br />\n<br />\n<br />\n\n<div style=\"text-align: center;\">\n    <button mat-raised-button color=\"primary\" (click)=\"salvar()\">OK</button>\n    <button mat-raised-button color=\"warn\" (click)=\"cancelar()\">Cancelar</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get(\"/api/\").subscribe(\n      (posts: any[]) => {\n        for(let p of posts){\n          this.posts.push(\n            new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n          );\n        }\n      }\n    );\n  }\n\n  salvar(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post(\"/api\", uploadData,\n    {\n      reportProgress: true, observe: 'events'\n    }).subscribe((event: any) => {\n      if(event.type == HttpEventType.Response){\n        //console.log(event);\n        let p:any = event.body;\n        this.posts.push(\n          new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n        );\n      }\n      if(event.type == HttpEventType.UploadProgress){\n        console.log('UploadProgress');\n        console.log(event);\n      }\n    });\n\n  }\n\n  like(id: number){\n    this.http.get('/api/like/' + id).subscribe(\n    (event: any) => {\n      let p = this.posts.find((p) => p.id == id);\n      p.likes = event.likes;\n    }\n    );\n  }\n\n  apagar(id: number){\n    this.http.delete(\"/api/\" + id).subscribe(\n      (event) => {\n        //console.log(event);\n        let i =  this.posts.findIndex((p) => p.id == id);\n        if(i >= 0){\n          this.posts.splice(i,1);\n        }          \n      }\n    );\n  }\n}\n","export class Post{    \r\n    constructor(\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ){}\r\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(private postService: PostService) { }\n\n  ngOnInit(): void {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  apagar(){\n    this.postService.apagar(this.post.id);\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{ post.titulo }}</mat-card-title>\n      <mat-card-subtitle>{{  post.subtitulo }}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{ post.arquivo }}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{ post.mensagem }}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" (click)=\"like()\">LIKE</button>\n      <button mat-raised-button coler=\"accent\" (click)=\"apagar()\">APAGAR</button>\n      <mat-icon color=\"warn\" *ngIf=\"post.likes>0\" [matBadge]=\"post.likes\"\n        matBadgePosition=\"above after\" matBadgeColor=\"warn\" matBadgeOverlap=\"false\">favorite</mat-icon>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}